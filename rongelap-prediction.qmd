---
title: "预测核辐射强度的分布"
subtitle: "空间数据分析"
author: "黄湘云"
date: 07/12/2023
date-format: long
institute: "统计之都 \\@ 北京会议中心 "
format: 
  revealjs:
    html-math-method: katex
    smooth-scroll: true
    slide-number: true
    preview-links: auto
    smaller: true
    embed-resources: true
lang: zh
bibliography: refer.bib
---

## 目录

1.  核污染研究的背景和意义

2.  数据探索和分析的过程

    -   描述数据的空间分布
    -   广义线性模型及模型诊断
    -   空间广义线性混合效应模型
    -   模型拟合及准备预测位置
    -   模型预测及展示预测分布

## 氢弹核试验 

[^1]: 资料来源于维基词条 [Rongelap Atoll](https://en.wikipedia.org/wiki/Rongelap_Atoll){preview-link="true"} 和 [Castle Bravo](https://en.wikipedia.org/wiki/Castle_Bravo){preview-link="true"} 。

:::: {.columns}

::: {.column width="70%"}

![](images/Bravo_Fallout.jpg)

:::

::: {.column width="30%"}

![](https://upload.wikimedia.org/wikipedia/commons/0/0e/CastleBravo1.gif)

这颗氢弹的当量相当于广岛原子弹的 **1000** 倍。 由于核辐射扩散，导致朗格拉普环礁的主岛受到核辐射[^1]。
:::

::::

## 朗格拉普岛

```{r}
#| label: fig-rongelap-imagery
#| echo: false
#| message: false
#| fig-cap: 朗格拉普岛地理位置特殊，是一个重要的军事基地，建有环岛公路和机场。卫星拍摄的影像数据（2020 年）来自 <https://rmi-data.sprep.org/>

library(terra)
m <- rast(x = "data/MHL_2020_ImageryAilinginaeRongelapRongerik_Sentinel2.tif")
library(sf)
n <- st_sfc(st_polygon(x = list(rbind(
  c(166.832, 11.14),
  c(166.832, 11.185),
  c(166.905, 11.185),
  c(166.905, 11.14),
  c(166.832, 11.14)
)), dim = "XY"), crs = 4326)
n <- st_transform(n, crs = "EPSG:32658")
rongelap_image <- crop(m, n)
plot(rongelap_image)
```



<!-- 
## 三个主要问题

1. 预测：未采样点的核辐射强度 $\lambda(x)$
2. 辐射源：核辐射强度最大的位置 $\arg \max_x \lambda(x)$。
3. 危险区域：辐射强度预测值大于临界值的可能性大于 0.01 的区域。即找到满足条件 $P\{\lambda(x) \geq 15\} \geq 0.01$ 的所有位置 $x$ 。

在空间数据分析中，这三个问题具有普适性。

- 北京市空气污染物浓度 PM2.5 的分布。根据分布在北京市内的空气质量检测站点的数据分析。
- 北京市地表土壤重金属污染物浓度的分布。砷 As 采样

- 北京市电单车的需求供给的分布。电单车一般必须停靠在固定的位置，一个停靠点服务的范围。

数据采集的位置是固定的，在空间上是连续的。
-->

## 采集的核辐射数据（部分）

```{r}
#| label: tbl-rongelap-nuclear-data
#| tbl-cap: "采集的核辐射数据"
#| echo: false
#| tbl-subcap:
#|   - "核辐射检测数据"
#|   - "海岸线坐标数据"
#| layout-ncol: 2

# 加载数据
rongelap <- readRDS(file = "data/rongelap.rds")
rongelap_coastline <- readRDS(file = "data/rongelap_coastline.rds")

knitr::kable(head(rongelap, 6), 
  col.names = c("横坐标", "纵坐标", "粒子数目", "统计时间")
)

knitr::kable(head(rongelap_coastline, 6), 
  col.names = c("横坐标", "纵坐标")
)
```

## 采样数据的空间分布

::: panel-tabset
### 采样分布

```{r}
#| label: fig-rongelap-location
#| fig-cap: "采样点在岛上的分布"
#| fig-showtext: true
#| fig-width: 8.06
#| fig-height: 4.16
#| echo: false

library(ggplot2)
ggplot() +
  geom_point(data = rongelap, aes(x = cX, y = cY), size = 0.2) +
  geom_path(data = rongelap_coastline, aes(x = cX, y = cY)) +
  theme_bw() +
  coord_fixed() +
  labs(x = "横坐标（米）", y = "纵坐标（米）")
```

### 采样顺序

```{r}
#| label: fig-rongelap-order
#| fig-cap: "采样点在岛上的分布"
#| fig-showtext: true
#| fig-width: 8.06
#| fig-height: 4.16
#| echo: false
#| code-fold: true

rongelap$dummy <- rownames(rongelap)
ggplot() +
  geom_path(data = rongelap_coastline, aes(x = cX, y = cY)) +
  geom_text(data = rongelap, aes(x = cX, y = cY,label = dummy), size = 2) +
  theme_bw() +
  coord_fixed() +
  labs(x = "横坐标（米）", y = "纵坐标（米）")
```
:::

## 岛上各采样点的核辐射强度

```{r}
#| label: fig-rongelap-location-zoom
#| fig-cap: "岛上各采样点的核辐射强度"
#| fig-width: 6.2
#| fig-height: 3.2
#| fig-showtext: true
#| code-fold: true

p1 <- ggplot() +
  geom_path(data = rongelap_coastline, aes(x = cX, y = cY)) +
  geom_point(data = rongelap, aes(x = cX, y = cY, color = counts / time), size = 0.2) +
  scale_x_continuous(n.breaks = 7) +
  scale_color_viridis_c(option = "C") +
  geom_segment(
    data = data.frame(x = -5560, xend = -5000, y = -3000, yend = -2300),
    aes(x = x, y = y, xend = xend, yend = yend),
    arrow = arrow(length = unit(0.03, "npc"))
  ) +
  theme_bw() +
  coord_fixed() +
  labs(x = "横坐标（米）", y = "纵坐标（米）", color = "辐射强度")

p2 <- ggplot() +
  geom_point(data = rongelap, aes(x = cX, y = cY, color = counts / time), 
             size = 1, show.legend = FALSE) +
  scale_color_viridis_c(option = "C") +
  coord_fixed(xlim = c(-5700, -5540), ylim = c(-3260, -3100)) +
  theme_bw() +
  labs(x = NULL, y = NULL)

p1
print(p2, vp = grid::viewport(x = .25, y = .66, width = .275, height = .45))
```

## 广义线性模型及拟合

::: columns
::: {.column width="50%"}
核辐射是由放射元素衰变产生的，通常用单位时间释放出来的粒子数目表示辐射强度，因此，建立如下泊松型广义线性模型来拟合核辐射强度。

$$
\begin{aligned}
\log(\lambda_i) &= \beta \\
y_i & \sim \mathrm{Poisson}(t_i\lambda_i)
\end{aligned}
$$

待估参数 $\beta$ 。
:::

::: {.column width="50%"}
```{r}
#| echo: true

fit_rongelap_poisson <- glm(counts ~ 1,
  family = poisson(link = "log"), 
  offset = log(time), data = rongelap
)
summary(fit_rongelap_poisson)
```
:::
:::

## 模型诊断 I

```{r}
#| label: fig-rongelap-poisson-residuals
#| fig-cap: "残差的空间分布"
#| fig-width: 6.2
#| fig-height: 3.2
#| fig-showtext: true

rongelap$poisson_residuals <- residuals(fit_rongelap_poisson)
ggplot(rongelap, aes(x = cX, y = cY)) +
  geom_point(aes(colour = poisson_residuals / time), size = 0.2) +
  scale_color_viridis_c(option = "C") +
  theme_bw() +
  labs(x = "横坐标（米）", y = "纵坐标（米）", color = "残差")
```

颜色深和颜色浅的点分别聚集在一起，且与周围点的颜色呈现层次变化，拟合残差存在一定的空间相关性。

## 模型诊断 II

::: panel-tabset
### 图 1

```{r}
#| fig-cap: 残差与编号的关系
#| label: fig-poisson-residuals-1
#| fig-showtext: true
#| fig-width: 6
#| fig-height: 4
ggplot(rongelap, aes(x = 1:157, y = poisson_residuals / time)) +
  geom_point(size = 1) +
  theme_bw() +
  labs(x = "编号", y = "残差")
```

### 图 2

```{r}
#| label: fig-poisson-residuals-2
#| fig-cap: 残差与横坐标的关系
#| fig-showtext: true
#| fig-width: 6
#| fig-height: 4
ggplot(rongelap, aes(x = cX, y = poisson_residuals / time)) +
  geom_point(size = 1) +
  theme_bw() +
  labs(x = "横坐标", y = "残差")
```

### 图 3

```{r}
#| label: fig-poisson-residuals-3
#| fig-cap: 残差与纵坐标的关系
#| fig-showtext: true
#| fig-width: 6
#| fig-height: 4
ggplot(rongelap, aes(x = cY, y = poisson_residuals / time)) +
  geom_point(size = 1) +
  theme_bw() +
  labs(x = "纵坐标", y = "残差")
```
:::

## 空间广义线性混合效应模型

广义线性模型并没有考虑距离相关性，它认为各个观测点的数据是相互独立的。因此，在广义线性模型的基础上添加位置相关的随机效应，用以刻画未能直接观测到的潜在影响。根据 ${}^{137}\mathrm{Cs}$ 放出伽马射线，在 $n=157$ 个采样点，分别以时间间隔 $t_i$ 测量辐射量 $y(x_i)$，建立泊松型空间广义线性混合效应模型[@Diggle1998]。

$$
\begin{aligned}
\log\{\lambda(x_i)\} & =  \beta + S(x_{i})\\
y(x_{i}) &\sim \mathrm{Poisson}\big(t_i\lambda(x_i)\big)
\end{aligned}
$$ {#eq-rongelap-poisson-sglmmm}

其中，$\beta$ 表示截距，相当于平均水平，$\lambda(x_i)$ 表示位置 $x_i$ 处的辐射强度，$S(x_{i})$ 表示位置 $x_i$ 处的空间效应，$S(x),x \in \mathcal{D} \subset{\mathbb{R}^2}$ 是二维平稳空间高斯过程 $\mathcal{S}$ 的具体实现。 $\mathcal{D}$ 表示研究区域，可以理解为朗格拉普岛，它是二维实平面 $\mathbb{R}^2$ 的子集。

## 随机过程的自协方差函数

随机过程 $S(x)$ 的自协方差函数常用的有指数型、幂二次指数型（高斯型）和梅隆型，形式如下：

$$
\begin{aligned}
\mathsf{Cov}\{S(x_i), S(x_j)\} &= \sigma^2 \exp\big( -\frac{\|x_i -x_j\|_{2}}{\phi} \big) \\
\mathsf{Cov}\{ S(x_i), S(x_j) \} &= \sigma^2 \exp\big( -\frac{\|x_i -x_j\|_{2}^{2}}{2\phi^2} \big) \\
\mathsf{Cov}\{ S(x_i), S(x_j) \} &= \sigma^2 \frac{2^{1 - \nu}}{\Gamma(\nu)}
\left(\sqrt{2\nu}\frac{\|x_i -x_j\|_{2}}{\phi}\right)^{\nu}
K_{\nu}\left(\sqrt{2\nu}\frac{\|x_i -x_j\|_{2}}{\phi}\right) \\
K_{\nu}(x) &= \int_{0}^{\infty}\exp(-x \cosh t) \cosh (\nu t) \mathrm{dt}
\end{aligned}
$$

待估参数：代表方差的 $\sigma^2$ 和代表范围的 $\phi$ 。当 $\nu = 1/2$ 时，梅隆型退化为指数型。

## 模型拟合

```{r}
#| message: false
#| echo: true
#| output-location: column

library(spaMM)
# 对数高斯分布作为参考
fit_rongelap_gaussian <- fitme(
  log(counts / time) ~ 1 + Matern(1 | cX + cY),
  data = rongelap, fixed = list(nu = 0.5), method = "REML"
)
# 泊松分布
fit_rongelap_poisson <- fitme(
  formula = counts ~ 1 + Matern(1 | cX + cY) + offset(log(time)),
  family = poisson(link = "log"), data = rongelap,
  fixed = list(nu = 0.5), method = "REML"
)
summary(fit_rongelap_poisson)
```

采用 **spaMM** 包[@Rousset2014] 拟合模型。输出结果中，固定效应中的 `(Intercept)` 对应模型参数 $\beta = 1.829$ ，随机效应中的方差参数 `lambda` 对应模型参数 $\sigma^2 = 0.3069$ ，随机效应中相关参数 `1.rho` 的倒数对应模型范围参数 $\phi = 1/0.00921 = 108.58$ 。

## 准备数据：构造网格

```{r}
#| echo: true
#| code-fold: true

library(sf)
rongelap_sf <- st_as_sf(rongelap, coords = c("cX", "cY"), dim = "XY")
rongelap_coastline_sf <- st_as_sf(rongelap_coastline, coords = c("cX", "cY"), dim = "XY")
# 点转线
rongelap_coastline_sfp <- st_cast(st_combine(st_geometry(rongelap_coastline_sf)), "POLYGON")
# 缓冲区
rongelap_coastline_buffer <- st_buffer(rongelap_coastline_sfp, dist = 50)
# 矩形网格
rongelap_coastline_grid <- st_make_grid(rongelap_coastline_buffer, n = c(150, 75))
```

```{r}
#| label: fig-rongelap-coastline-grid
#| fig-cap: "网格操作"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true
#| code-fold: true

ggplot() +
  geom_sf(data = rongelap_coastline_grid, fill = NA, color = "gray") +
  geom_sf(data = rongelap_coastline_sfp, fill = NA, color = "gray30") +
  geom_sf(data = rongelap_coastline_buffer, fill = NA, color = "black") +
  theme_void()
```

采用 **sf** 包[@Pebesma2018]和 **stars** 包[@Pebesma2023]操作空间数据。

## 准备数据：未采样的位置

```{r}
#| echo: true
#| code-fold: true
# 将 sfc 类型转化为 sf 类型，准备取交集
rongelap_coastline_grid <- st_as_sf(rongelap_coastline_grid)
rongelap_coastline_buffer <- st_as_sf(rongelap_coastline_buffer)
# 边界约束内的网格
rongelap_grid <- rongelap_coastline_grid[rongelap_coastline_buffer, op = st_intersects]
# 计算网格中心点坐标
rongelap_grid_centroid <- st_centroid(rongelap_grid)
```

```{r}
#| label: fig-rongelap-grid
#| fig-cap: "朗格拉普岛规则网格划分结果"
#| fig-width: 7
#| fig-height: 4
#| fig-showtext: true
#| code-fold: true

ggplot() +
  geom_sf(data = rongelap_coastline_sfp, 
          fill = NA, color = "gray30", linewidth = 0.5) +
  geom_sf(data = rongelap_grid, fill = NA, color = "gray30") +
  theme_void()
```

## 模型预测

```{r}
#| echo: true
# sf 类型转 data.frame 类型
rongelap_grid_df <- as.data.frame(st_coordinates(rongelap_grid_centroid))
colnames(rongelap_grid_df) <- c("cX", "cY")
rongelap_grid_df$time <- 1

# 对数高斯分布
# 预测
rongelap_grid_pred <- predict(fit_rongelap_gaussian,
  newdata = rongelap_grid_df, type = "response"
)
rongelap_grid_df$pred_sk <- exp(as.vector(rongelap_grid_pred))
# 线性预测的方差
rongelap_grid_var <- get_predVar(fit_rongelap_gaussian,
  newdata = rongelap_grid_df, variances = list(predVar = TRUE), which = "predVar"
)
rongelap_grid_df$var_sk <- as.vector(rongelap_grid_var)

# 泊松分布
# 预测
rongelap_grid_pred <- predict(fit_rongelap_poisson,
  newdata = rongelap_grid_df, type = "response"
)
rongelap_grid_df$pred_sp <- as.vector(rongelap_grid_pred)
# 线性预测的方差
rongelap_grid_var <- get_predVar(fit_rongelap_poisson,
  newdata = rongelap_grid_df, variances = list(predVar = TRUE), which = "predVar"
)
rongelap_grid_df$var_sp <- as.vector(rongelap_grid_var)
```

## 核辐射强度分布：对数高斯模型

```{r}
#| label: fig-rongelap-pred-sk
#| fig-cap: "朗格拉普岛核辐射强度的分布"
#| fig-width: 7.5
#| fig-height: 4.5
#| fig-showtext: true
#| code-fold: true

library(abind)
library(stars)
# data.frame 转 Simple Feature
rongelap_grid_sf <- st_as_sf(rongelap_grid_df, coords = c("cX", "cY"), dim = "XY")
# Simple Feature 转 stars
rongelap_grid_stars <- st_rasterize(rongelap_grid_sf, nx = 150, ny = 75)
# 仅保留海岸线以内的部分
rongelap_stars <- st_crop(x = rongelap_grid_stars, y = rongelap_coastline_sfp)

# 虚线框数据
dash_sfp <- st_polygon(x = list(rbind(
  c(-6000, -3600),
  c(-6000, -2600),
  c(-5000, -2600),
  c(-5000, -3600),
  c(-6000, -3600)
)), dim = "XY")
# 主体内容
p3 <- ggplot() +
  geom_stars(
    data = rongelap_stars, na.action = na.omit,
    aes(fill = pred_sk / time)
  ) +
  # 海岸线
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.5
  ) +
  # 图例
  scale_fill_viridis_c(
    option = "C", breaks = 0:12,
    guide = guide_colourbar(
      barwidth = 15, barheight = 1.5,
      title.position = "top" # 图例标题位于图例上方
    )
  ) +
  # 虚线框
  geom_sf(data = dash_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  # 箭头
  geom_segment(
    data = data.frame(x = -5500, xend = -5000, y = -2600, yend = -2250),
    aes(x = x, y = y, xend = xend, yend = yend),
    arrow = arrow(length = unit(0.03, "npc"))
  ) +
  theme_bw() +
  labs(x = "横坐标（米）", y = "纵坐标（米）", fill = "辐射强度") +
  theme(
    legend.position = c(0.75, 0.1),
    legend.direction = "horizontal",
    legend.background = element_blank()
  )

p4 <- ggplot() +
  geom_stars(
    data = rongelap_stars, na.action = na.omit,
    aes(fill = pred_sk / time), show.legend = FALSE
  ) +
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.75
  ) +
  scale_fill_viridis_c(option = "C", breaks = 0:12) +
  # 虚线框
  geom_sf(data = dash_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  theme_void() +
  coord_sf(expand = FALSE, xlim = c(-6000, -5000), ylim = c(-3600, -2600))
# 叠加图形
p3
print(p4, vp = grid::viewport(x = .3, y = .65, width = .45, height = .45))
```

## 核辐射强度分布：泊松模型

```{r}
#| label: fig-rongelap-pred-sp
#| fig-cap: "朗格拉普岛核辐射强度的分布"
#| fig-width: 7.5
#| fig-height: 4.5
#| fig-showtext: true
#| code-fold: true

# 主体内容
p3 <- ggplot() +
  geom_stars(
    data = rongelap_stars, na.action = na.omit,
    aes(fill = pred_sp / time)
  ) +
  # 海岸线
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.5
  ) +
  # 图例
  scale_fill_viridis_c(
    option = "C", breaks = 0:12,
    guide = guide_colourbar(
      barwidth = 15, barheight = 1.5,
      title.position = "top" # 图例标题位于图例上方
    )
  ) +
  # 虚线框
  geom_sf(data = dash_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  # 箭头
  geom_segment(
    data = data.frame(x = -5500, xend = -5000, y = -2600, yend = -2250),
    aes(x = x, y = y, xend = xend, yend = yend),
    arrow = arrow(length = unit(0.03, "npc"))
  ) +
  theme_bw() +
  labs(x = "横坐标（米）", y = "纵坐标（米）", fill = "辐射强度") +
  theme(
    legend.position = c(0.75, 0.1),
    legend.direction = "horizontal",
    legend.background = element_blank()
  )

p4 <- ggplot() +
  geom_stars(
    data = rongelap_stars, na.action = na.omit,
    aes(fill = pred_sp / time), show.legend = FALSE
  ) +
  geom_sf(
    data = rongelap_coastline_sfp,
    fill = NA, color = "gray30", linewidth = 0.75
  ) +
  scale_fill_viridis_c(option = "C", breaks = 0:12) +
  # 虚线框
  geom_sf(data = dash_sfp, fill = NA, linewidth = 0.75, lty = 2) +
  theme_void() +
  coord_sf(expand = FALSE, xlim = c(-6000, -5000), ylim = c(-3600, -2600))
# 叠加图形
p3
print(p4, vp = grid::viewport(x = .3, y = .65, width = .45, height = .45))
```

## 总结

1.  空间数据探索
    -   描述响应变量的分布
    -   响应变量的空间分布
    -   响应变量与横纵坐标的关系
2.  建立广义线性模型以及检查模型残差分布
3.  建立空间（广义）线性混合效应模型
4.  模型拟合、评估和结果解释
5.  准备未采样的位置数据
6.  模型预测及展示预测结果

## 参考文献

::: {#refs}
:::

##  {#slide-thanks data-menu-title="谢谢"}

```{css}
#| echo: false

.thanks {
  font-size: 100px;
  margin: 0;
  position: absolute;
  top: 40%;
  left: 45%;
}
```

::: thanks
谢谢
:::
